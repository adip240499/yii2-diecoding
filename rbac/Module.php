<?php
/**
 * @Author: Die Coding <www.diecoding.com>
 * @Date:   19 February 2018
 * @Email:  diecoding@gmail.com
 * @Last modified by:   Die Coding <www.diecoding.com>
 * @Last modified time: 11 March 2018
 * @License: MIT
 * @Copyright: 2018
 */


namespace diecoding\rbac;

use Yii;
use yii\base\Module as Modules;
use yii\helpers\Html;
use yii\helpers\Inflector;
use yii\web\Application;
use diecoding\rbac\components\Option;

/**
 *
 * Use [[\yii\base\Module::$controllerMap]] to change property of controller.
 * To change listed menu, use property [[$menus]].
 *
 * ```
 * 'controllerMap' => [
 *    'assignment' => [
 *      'class'         => 'diecoding\rbac\controllers\AssignmentController',
 *      'userClassName' => 'diecoding\models\User',
 *      'idField'       => 'id'
 *    ],
 * ],
 * 'menus' => [
 *   'assignment' => [
 *     'label' => 'Access' // change label
 *   ],
 *   'route' => null, // disable menu
 * ],
 * ```
 *
 * @property string $mainLayout Main layout using for module. Default to layout of parent module.
 * @property array $menus List available menu of module.
 * It generated by module items .
 *
 * @author Die Coding <diecoding@gmail.com>
 * @since 0.0.0
 */
class Module extends Modules
{
  /**
   * @inheritdoc
   */
  public $defaultRoute = 'default';

  /**
   * @var array Nav bar items.
   */
  public $navbar;

  public $layout = 'top-menu';

  /**
   * Default
   *
   * 'footer' => [
   *   'left'       => '&copy; ' . Yii::$app->name,
   *   'right'      => Yii::powered(),
   *   'htmlEncode' => false,
   * ],
   *
   * @var array
   */
  public $footer = [];

  /**
   * @var array
   * @see [[menus]]
   */
  private $_menus = [];

  /**
   * @var array
   * @see [[menus]]
   */
  private $_coreItems = [
      'user'       => 'Users',
      'assignment' => 'Assignments',
      'role'       => 'Roles',
      'permission' => 'Permissions',
      'route'      => 'Routes',
      'rule'       => 'Rules',
      'menu'       => 'Menus',
  ];

  /**
   * @var array
   * @see [[items]]
   */
  private $_normalizeMenus;

  /**
   * @var string Default url for breadcrumb
   */
  public $defaultUrl;

  /**
   * @var string Default url label for breadcrumb
   */
  public $defaultUrlLabel;

  /**
   * @inheritdoc
   */
  public function init()
  {
    parent::init();
    if (!isset(Yii::$app->i18n->translations['diecoding'])) {
      Yii::$app->i18n->translations['diecoding'] = [
        'class'          => 'yii\i18n\PhpMessageSource',
        'sourceLanguage' => 'en',
        'basePath'       => '@diecoding/i18n',
      ];
    }

    // Main navbar
    if ($this->navbar === null && Yii::$app instanceof Application) {
      $this->navbar = [
        ['label' => Yii::t('diecoding', 'Guide'), 'url' => ['/guide']],
        ['label' => Yii::t('diecoding', 'Application'), 'url' => ['/']],
      ];
    }

    // Footer
    $encode = !array_key_exists('htmlEncode', $this->footer) ? : $this->footer['htmlEncode'];
    $this->footer = [
      'left'  => array_key_exists('left', $this->footer) ? ($encode ? Html::encode($this->footer['left'])  : $this->footer['left'])  : "&copy; " . Yii::$app->name,
      'right' => array_key_exists('right', $this->footer) ? ($encode ? Html::encode($this->footer['right']) : $this->footer['right']) : Yii::powered(),
    ];

  }

  /**
   * Get available menu.
   * @return array
   */
  public function getMenus()
  {
    if ($this->_normalizeMenus === null) {
      $uniqueId = $this->uniqueId;
      $uniqueId = "/{$uniqueId}/";

      // resolve core menus
      $this->_normalizeMenus = [];

      $option     = Option::instance();
      $conditions = [
        'user'       => $option->db && $option->db->schema->getTableSchema($option->userTable),
        'assignment' => ($userClass = Yii::$app->user->identityClass) && is_subclass_of($userClass, 'yii\db\BaseActiveRecord'),
        'menu'       => $option->db && $option->db->schema->getTableSchema($option->menuTable),
      ];

      foreach ($this->_coreItems as $id => $label) {
        if (!isset($conditions[$id]) || $conditions[$id]) {
          $this->_normalizeMenus[$id] = ['label' => Yii::t('diecoding', $label), 'url' => ["{$uniqueId}{$id}"]];
        }
      }

      foreach (array_keys($this->controllerMap) as $name) {
        $this->_normalizeMenus[$name] = ['label' => Yii::t('diecoding', Inflector::humanize($name)), 'url' => ["{$uniqueId}{$name}"]];
      }

      // user configure menus
      foreach ($this->_menus as $id => $value) {
        if (empty($value)) {
          unset($this->_normalizeMenus[$id]);
          continue;
        }
        if (is_string($value)) {
          $value = ['label' => $value];
        }
        $this->_normalizeMenus[$id] = isset($this->_normalizeMenus[$id]) ? array_merge($this->_normalizeMenus[$id], $value)
        : $value;
        if (!isset($this->_normalizeMenus[$id]['url'])) {
          $this->_normalizeMenus[$id]['url'] = [$uniqueId . $id];
        }
      }
    }
    return $this->_normalizeMenus;
  }

  /**
   * Set or add available menu.
   * @param array $menus
   */
  public function setMenus($menus)
  {
    $this->_menus          = array_merge($this->_menus, $menus);
    $this->_normalizeMenus = null;
  }

  /**
   * @inheritdoc
   */
  public function beforeAction($action)
  {
    if (parent::beforeAction($action)) {
      /* @var $action \yii\base\Action */
      $view = $action->controller->view;

      $view->params['breadcrumbs'][] = [
        'label' => ($this->defaultUrlLabel ?  : Yii::t('diecoding', 'RBAC')),
        'url'   => ['/' . ($this->defaultUrl ?: $this->uniqueId)],
      ];
      return true;
    }
    return false;
  }
}
